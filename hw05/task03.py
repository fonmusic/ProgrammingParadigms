"""
Логическое программирование
Задача 3:Сложная задача: По желанию
адача: НОП (наибольшая общая подпоследовательность) двух строк — это самая длинная последовательность символов,
которая содержится и в первой, и во второй строке, в том же порядке, но не обязательно подряд.
Другими словами, это максимально длинная последовательность символов, которая является "общей" для обеих строк.
__
Пример:
makefile
Copy code
X = "AGGTAB"
Y = "GXTXAYB"
Наибольшая общая подпоследовательность: "GTAB" (другие НОП также могут быть "GTTAB" и "GTXAB").

Задача состоит в том, чтобы написать программу, которая находит НОП для двух заданных строк.
"""


def lcs(X, Y, m, n):
    if m == 0 or n == 0:
        return 0
    elif X[m - 1] == Y[n - 1]:
        return 1 + lcs(X, Y, m - 1, n - 1)
    else:
        return max(lcs(X, Y, m, n - 1), lcs(X, Y, m - 1, n))


X = "AGGTAB"
Y = "GXTXAYB"
print("Length of LCS is ", lcs(X, Y, len(X), len(Y)))

X = "ABCDGH"
Y = "AEDFHR"
print("Length of LCS is ", lcs(X, Y, len(X), len(Y)))
