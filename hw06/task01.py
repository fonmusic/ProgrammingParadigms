"""
Контекст
Предположим, что мы хотим найти элемент в массиве (получить его индекс).
Мы можем это сделать просто перебрав все элементы. Но что, если массив уже отсортирован?
В этом случае можно использовать бинарный поиск. Принцип прост: сначала берём элемент находящийся
посередине и сравниваем с тем, который мы хотим найти. Если центральный элемент больше нашего,
рассматриваем массив слева от центрального, а если больше - справа и повторяем так до тех пор,
пока не найдем наш элемент.
Ваша задача
Написать программу на любом языке в любой парадигме для бинарного поиска.
На вход подаётся целочисленный массив и число. На выходе - индекс элемента или -1,
в случае если искомого элемента нет в массиве.
"""


def binary_search(array, item):
    low = 0
    high = len(array) - 1

    while low <= high:
        mid = (low + high) // 2
        guess = array[mid]

        if guess == item:
            return mid

        if guess > item:
            high = mid - 1
        else:
            low = mid + 1

    return -1


if __name__ == "__main__":
    array = [1, 3, 5, 7, 9]
    print(f"Array: {array}")
    print(f"Index of 3: {binary_search(array, 3)}")
    print(f"Index of 0: {binary_search(array, -1)}")
